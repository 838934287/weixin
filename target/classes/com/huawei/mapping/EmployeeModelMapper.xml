<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huawei.dao.EmployeeModelMapper">
  <resultMap id="BaseResultMap" type="com.huawei.model.EmployeeModel">
    <id column="EmployeeModel_id" jdbcType="INTEGER" property="id" />
    <result column="EmployeeModel_employeeId" jdbcType="INTEGER" property="employeeid" />
    <result column="EmployeeModel_role" jdbcType="VARCHAR" property="role" />
    <result column="EmployeeModel_weixin_Id" jdbcType="VARCHAR" property="weixinId" />
    <result column="EmployeeModel_username" jdbcType="VARCHAR" property="username" />
    <result column="EmployeeModel_password" jdbcType="VARCHAR" property="password" />
    
  </resultMap>
  <sql id="Base_Column_List">
    EmployeeModel.id as EmployeeModel_id, EmployeeModel.employeeid as EmployeeModel_employeeid, 
    EmployeeModel.role as EmployeeModel_role, EmployeeModel.weixin_Id as EmployeeModel_weixin_Id, 
    EmployeeModel.username as EmployeeModel_username,EmployeeModel.password as EmployeeModel_password
  </sql>
  
  <!-- 查询用户记录总数 -->
	<select id="selectCount" resultType="int">
		select count(*) from employee
	</select>
  
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee EmployeeModel
    where EmployeeModel.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectEmployeeByRole" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee EmployeeModel
    where EmployeeModel.role = #{role,jdbcType=VARCHAR}
  </select>
  
  <select id="selectAllEmployee" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee EmployeeModel
    where 1=1
  </select>
  
  <select id="selectEmployeeByEmployeeId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee EmployeeModel
    where EmployeeModel.employeeid = #{employeeid,jdbcType=INTEGER}
  </select>
  
  
  
  <!--用户登录 -->
	<select id="loginByEmployeeIdAndPassword"  resultMap="BaseResultMap" parameterType="com.huawei.model.EmployeeModel">
		select 
		<include refid="Base_Column_List" />
		 from employee EmployeeModel
		 where 
		 employeeId = #{employeeid,jdbcType=INTEGER}
		 and password = #{password,jdbcType=VARCHAR}
	</select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where employeeid = #{employeeid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.huawei.model.EmployeeModel">
    insert into employee (id, employeeid, role, 
      weixin_Id, username,password)
    values (#{id,jdbcType=INTEGER}, #{employeeid,jdbcType=INTEGER}, #{role,jdbcType=VARCHAR}, 
      #{weixinId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.huawei.model.EmployeeModel">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="employeeid != null">
        employeeId,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="weixinId != null">
        weixin_Id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="employeeid != null">
        #{employeeid,jdbcType=INTEGER},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="weixinId != null">
        #{weixinId,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.huawei.model.EmployeeModel">
    update employee
    <set>
      <if test="employeeid != null">
        employeeId = #{employeeid,jdbcType=INTEGER},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="weixinId != null">
        weixin_Id = #{weixinId,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      
    </set>
    where employeeId = #{employeeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huawei.model.EmployeeModel">
    update employee
    set employeeId = #{employeeid,jdbcType=INTEGER},
      role = #{role,jdbcType=VARCHAR},
      weixin_Id = #{weixinId,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where employeeid = #{employeeid,jdbcType=INTEGER}
  </update>
  
  
	<!-- 根据分页数据start 和size查询数据 -->
	<select id="findByPage" parameterType="Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from employee EmployeeModel
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
  	</select>
  
  
  
</mapper>